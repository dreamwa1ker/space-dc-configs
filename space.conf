server {
    client_max_body_size 0;
    server_name space.pavelboger.com;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://127.0.0.1:8084/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/space.pavelboger.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/space.pavelboger.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    client_max_body_size 0;
    server_name git.pbg-dev.online;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://127.0.0.1:8080/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/space.pavelboger.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/space.pavelboger.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    client_max_body_size 0;
    server_name packages.pbg-dev.online;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://127.0.0.1:8390/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/space.pavelboger.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/space.pavelboger.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    client_max_body_size 0;
    server_name minio.pbg-dev.online;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://127.0.0.1:9000/;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/space.pavelboger.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/space.pavelboger.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}server {
    if ($host = space.pavelboger.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name space.pavelboger.com;

    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = git.pbg-dev.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name git.pbg-dev.online;

    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = minio.pbg-dev.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name minio.pbg-dev.online;

    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = packages.pbg-dev.online) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name packages.pbg-dev.online;

    listen 80;
    return 404; # managed by Certbot


}

