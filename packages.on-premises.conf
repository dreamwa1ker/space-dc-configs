ktor {
    deployment {
        environment = production
        port = 8390
        internalPort = 9390
        autoreload = false
        callGroupSize = 8
    }

    application {
        modules = [circlet.packages.server.ServerKt.main]
    }
}

circlet {
    bus {
        engine = "redis"
        host = "redis://redis:6379"
        type = "single"
    }

    organization {
        name = "JetBrains"
        slogan = "The Drive to Develop"
        schema = "spacedb"
        domain = "jetbrains"
    }

    server {
        configurableLogging = false
        processMetricsEnabled = false
    }

    masterSecret = "zWx90PyoiBKBY5OdfhBWS75a1beYcHPaKBGWdjBQ5qU="

    db {
        type = "postgresql"
        schemaPrefix = "crclt_"
        host = "postgres"
        username = "space"
        password = "spacepassword"

        postgresql {
            driver = "org.postgresql.Driver"
            url = "jdbc:postgresql://postgres:5432/spacedb"
        }

        pool {
            vendor = "hikari"

            maxActive = 96
            minIdle = 12
        }

        debug {
            similar_queries_count_threshold = 10
            all_queries_count_threshold = 100
        }
    }

    packages {
        url = "https://packages.pbg-dev.online"
        internalUrl = "http://packages:9390"

        supportedTypes = "container, maven, nuget, npm, pypi, composer, files, dart, crates"

        altUrls = [
            "http://localhost:8390",
            "http://localhost:9390",
        ]

        oauth {
            clientId = "space-to-packages-client"
            clientSecret = "6tySDrpq4rEHVp8DWXsVa087xxAXF7s2EnN2MBUdcfg="
        }

        vulnerabilities {
            url = ""
        }
    }

    perf {
        client {
            enabled = false
        }
        elastic {
            enabled = false
        }

        riemann {
            enabled = false
        }

        prometheus {
            enabled = false
            jmx = false
        }
    }

    space {
        url = "https://space.pavelboger.com"
        orgMode = "SINGLE_ORG"
        internalUrl = "http://space:9084"
    }

    storage {
        aws {
            region = "eu-west-1"
            bucket = "packages-local"
            endpoint = "http://minio:9000"
            publicUrl = "https://minio.pbg-dev.online"
            accessKey = "space-access-key"
            secretKey = "space-secret-key"
        }

        elastic {
            enabled = true
            host = "elasticsearch"
            port = 9200
            reIndex = true
        }
    }
}

